{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function CounterTest(_ref){let{nthNumber}=_ref;const[count,setCount]=useState(0);const counterRef=useRef(null);useEffect(()=>{const observer=new IntersectionObserver(entries=>{if(entries[0].isIntersecting){const intervalId=setInterval(()=>{if(count<nthNumber){setCount(count+1);}else{clearInterval(intervalId);}},10);// Adjust the interval as needed\n}},{rootMargin:'0px 0px -100px 0px'}// Adjust the root margin as needed\n);observer.observe(counterRef.current);return()=>{observer.disconnect();};},[nthNumber]);return/*#__PURE__*/_jsx(\"div\",{ref:counterRef,children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Count: \",count]})});}export default CounterTest;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxs","_jsxs","jsx","_jsx","CounterTest","_ref","nthNumber","count","setCount","counterRef","observer","IntersectionObserver","entries","isIntersecting","intervalId","setInterval","clearInterval","rootMargin","observe","current","disconnect","ref","children"],"sources":["D:/React/intern_demo/src/Home_component/CounterTest.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction CounterTest({ nthNumber }) {\r\n  const [count, setCount] = useState(0);\r\n  const counterRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          const intervalId = setInterval(() => {\r\n            if (count < nthNumber) {\r\n              setCount(count + 1);\r\n            } else {\r\n              clearInterval(intervalId);\r\n            }\r\n          }, 10); // Adjust the interval as needed\r\n        }\r\n      },\r\n      { rootMargin: '0px 0px -100px 0px' } // Adjust the root margin as needed\r\n    );\r\n\r\n    observer.observe(counterRef.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [nthNumber]);\r\n\r\n  return (\r\n    <div ref={counterRef}>\r\n      <p>Count: {count}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CounterTest;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAE3D,QAAS,CAAAC,WAAWA,CAAAC,IAAA,CAAgB,IAAf,CAAEC,SAAU,CAAC,CAAAD,IAAA,CAChC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAAAY,UAAU,CAAGV,MAAM,CAAC,IAAI,CAAC,CAE/BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,QAAQ,CAAG,GAAI,CAAAC,oBAAoB,CACtCC,OAAO,EAAK,CACX,GAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,CAAE,CAC7B,KAAM,CAAAC,UAAU,CAAGC,WAAW,CAAC,IAAM,CACnC,GAAIR,KAAK,CAAGD,SAAS,CAAE,CACrBE,QAAQ,CAACD,KAAK,CAAG,CAAC,CAAC,CACrB,CAAC,IAAM,CACLS,aAAa,CAACF,UAAU,CAAC,CAC3B,CACF,CAAC,CAAE,EAAE,CAAC,CAAE;AACV,CACF,CAAC,CACD,CAAEG,UAAU,CAAE,oBAAqB,CAAE;AACvC,CAAC,CAEDP,QAAQ,CAACQ,OAAO,CAACT,UAAU,CAACU,OAAO,CAAC,CAEpC,MAAO,IAAM,CACXT,QAAQ,CAACU,UAAU,CAAC,CAAC,CACvB,CAAC,CACH,CAAC,CAAE,CAACd,SAAS,CAAC,CAAC,CAEf,mBACEH,IAAA,QAAKkB,GAAG,CAAEZ,UAAW,CAAAa,QAAA,cACnBrB,KAAA,MAAAqB,QAAA,EAAG,SAAO,CAACf,KAAK,EAAI,CAAC,CAClB,CAAC,CAEV,CAEA,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}