{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\intern_demo\\\\src\\\\Home_component\\\\CounterTest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CounterTest({\n  nthNumber\n}) {\n  _s();\n  const [count, setCount] = useState(0);\n  const counterRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        const intervalId = setInterval(() => {\n          if (count < nthNumber) {\n            setCount(count + 1);\n          } else {\n            clearInterval(intervalId);\n          }\n        }, 10); // Adjust the interval as needed\n      }\n    }, {\n      rootMargin: '0px 0px -100px 0px'\n    } // Adjust the root margin as needed\n    );\n    observer.observe(counterRef.current);\n    return () => {\n      observer.disconnect();\n    };\n  }, [nthNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: counterRef,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(CounterTest, \"ZODrXrr1gPmKKAsVJ8xfi5Iff/M=\");\n_c = CounterTest;\nexport default CounterTest;\nvar _c;\n$RefreshReg$(_c, \"CounterTest\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","CounterTest","nthNumber","_s","count","setCount","counterRef","observer","IntersectionObserver","entries","isIntersecting","intervalId","setInterval","clearInterval","rootMargin","observe","current","disconnect","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/intern_demo/src/Home_component/CounterTest.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction CounterTest({ nthNumber }) {\r\n  const [count, setCount] = useState(0);\r\n  const counterRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          const intervalId = setInterval(() => {\r\n            if (count < nthNumber) {\r\n              setCount(count + 1);\r\n            } else {\r\n              clearInterval(intervalId);\r\n            }\r\n          }, 10); // Adjust the interval as needed\r\n        }\r\n      },\r\n      { rootMargin: '0px 0px -100px 0px' } // Adjust the root margin as needed\r\n    );\r\n\r\n    observer.observe(counterRef.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [nthNumber]);\r\n\r\n  return (\r\n    <div ref={counterRef}>\r\n      <p>Count: {count}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CounterTest;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,WAAWA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMU,UAAU,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd,MAAMU,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACX,IAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,EAAE;QAC7B,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;UACnC,IAAIR,KAAK,GAAGF,SAAS,EAAE;YACrBG,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;UACrB,CAAC,MAAM;YACLS,aAAa,CAACF,UAAU,CAAC;UAC3B;QACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MACV;IACF,CAAC,EACD;MAAEG,UAAU,EAAE;IAAqB,CAAC,CAAC;IACvC,CAAC;IAEDP,QAAQ,CAACQ,OAAO,CAACT,UAAU,CAACU,OAAO,CAAC;IAEpC,OAAO,MAAM;MACXT,QAAQ,CAACU,UAAU,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACf,SAAS,CAAC,CAAC;EAEf,oBACEF,OAAA;IAAKkB,GAAG,EAAEZ,UAAW;IAAAa,QAAA,eACnBnB,OAAA;MAAAmB,QAAA,GAAG,SAAO,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACpB,EAAA,CAhCQF,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAkCpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}